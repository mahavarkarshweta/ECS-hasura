version: 2
jobs:
  build_dev:
    working_directory: ~/project
    docker:
      - image: test-image:v1
    environment:
      DEPLOY_ENVIRONMENT: dev
    steps:
      - checkout
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export AWS_REST_API_ID="$AWS_DEV_REST_API_ID"' >> $BASH_ENV
            echo 'export AWS_TASK_FAMILY="$AWS_DEV_TASK_FAMILY"' >> $BASH_ENV
            echo 'export AWS_HASURA_ECS_CLUSTER="$AWS_DEV_HASURA_ECS_CLUSTER"' >> $BASH_ENV
            echo 'export GIT_SHA="$(git rev-parse --short HEAD)"' >> $BASH_ENV
      # Better to create a docker image for this step
      - run:
          name: Install awscli, jq and npm
          command: |
            apt-get update
            apt-get install -y jq zip python3-pip
            pip3 install awscli --upgrade
            curl -sL https://deb.nodesource.com/setup_8.x | bash -
            apt-get install -y nodejs
            npm install -g npm@5
            aws configure set default.region $AWS_REGION
      - run:
          name: Create Nextjs Serverless
          command: |
            cd custom/nextjs-serverless
            NODE_ENV=development npm ci
            npm run build
            rm -rf node_modules
            NODE_ENV=production npm ci
            zip -r "handler.zip" .
            ../../.circleci/deploy_next.sh
      - run:
          name: Apply migrations
          command: |
            echo "Installing hasura-cli"
            curl -L https://github.com/hasura/graphql-engine/raw/master/cli/get.sh | bash
            echo "Applying migrations"
            hasura migrate apply --project hasura --endpoint $HASURA_DEV_ENDPOINT --access-key $HASURA_DEV_ACCESS_KEY
            if [ -f hasura/migrations/metadata.yaml ]; then
               echo "Applying metadata"
               hasura metadata apply --project hasura --endpoint $HASURA_DEV_ENDPOINT --access-key $HASURA_DEV_ACCESS_KEY
            fi
            echo "Finished"
      
  build_stg:
    working_directory: ~/project
    docker:
      - image: buildpack-deps:xenial
    environment:
      DEPLOY_ENVIRONMENT: stg
    steps:
      - checkout
      - run:
          name: Apply migrations
          command: |
            echo "Installing hasura-cli"
            curl -L https://github.com/hasura/graphql-engine/raw/master/cli/get.sh | bash
            echo "Applying migrations"
            hasura migrate apply --project hasura --endpoint $HASURA_STG_ENDPOINT --access-key $HASURA_STG_ACCESS_KEY
            if [ -f hasura/migrations/metadata.yaml ]; then
               echo "Applying metadata"
               hasura metadata apply --project hasura --endpoint $HASURA_STG_ENDPOINT --access-key $HASURA_STG_ACCESS_KEY
            fi
            echo "Finished"
  build_prod:
    working_directory: ~/project
    docker:
      - image: buildpack-deps:xenial
    environment:
      DEPLOY_ENVIRONMENT: prod
    steps:
      - checkout
      - run:
          name: Apply migrations
          command: |
            echo "Installing hasura-cli"
            curl -L https://github.com/hasura/graphql-engine/raw/master/cli/get.sh | bash
            echo "Applying migrations"
            hasura migrate apply --project hasura --endpoint $HASURA_PROD_ENDPOINT --access-key $HASURA_PROD_ACCESS_KEY
            if [ -f hasura/migrations/metadata.yaml ]; then
               echo "Applying metadata"
               hasura metadata apply --project hasura --endpoint $HASURA_PROD_ENDPOINT --access-key $HASURA_PROD_ACCESS_KEY
            fi
            echo "Finished"
workflows:
  version: 2
  full:
    jobs:
      - build_dev:
          filters:
            branches:
              only: master
      - build_stg:
          filters:
            branches:
              only: staging
      - build_prod:
          filters:
            branches:
              only: prod